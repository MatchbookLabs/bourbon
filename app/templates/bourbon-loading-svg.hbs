<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32">
  <g class="nc-icon-wrapper" fill="#111">
    <g class="nc-loop_dots-07-32">
      <circle data-color="color-2" cx="16" cy="16" r="3" transform="matrix(.4 0 0 .4 9.6 9.6)" opacity=".4" />
      <circle cx="4" cy="16" r="3" />
      <circle cx="28" cy="16" r="3" transform="matrix(.4 0 0 .4 16.8 9.6)" opacity=".4" />
    </g>
    <script>!function () { function t(t) { this.element = t, this.dots = [this.element.getElementsByTagName(& quot; circle & quot;)[1], this.element.getElementsByTagName(& quot; circle & quot;)[0], this.element.getElementsByTagName(& quot; circle & quot;)[2]], this.animationId, this.start = null, this.init() } if (!window.requestAnimationFrame) { var e = null; window.requestAnimationFrame = function (t, i) { var n = (new Date).getTime(); e || (e = n); var a = Math.max(0, 16 - (n - e)), s = window.setTimeout(function () { t(n + a) }, a); return e = n + a, s } } t.prototype.init = function () { var t = this; this.animationId = window.requestAnimationFrame(t.triggerAnimation.bind(t)) }, t.prototype.reset = function () { var t = this; window.cancelAnimationFrame(t.animationId) }, t.prototype.triggerAnimation = function (t) { var e = this; this.start || (this.start = t); var i = t - this.start, n = Math.min(i / 250, 4), a = (n = 4 == n ? 0 : n) % 1, s = Math.ceil(n); 1e3 & gt; i || (this.start = this.start + 1e3); var r = [], o = [4, 16, 28], m = [16, 16, 16]; switch (r[0] = r[1] = r[2] = .4, s) { case 1: r[0] = 1 - 3 * a / 5, r[1] = .4 + 3 * a / 5; break; case 2: r[1] = 1 - 3 * a / 5, r[2] = .4 + 3 * a / 5; break; case 3: r[1] = .4 + 3 * a / 5, r[2] = 1 - 3 * a / 5; break; case 4: r[0] = .4 + 3 * a / 5, r[1] = 1 - 3 * a / 5; break; default: r[0] = 1 }for (var c = 0; 3 & gt; c; c++) this.dots[c].setAttribute(& quot; style & quot;, & quot; opacity:& quot; + r[c] + & quot;;& quot;), this.dots[c].setAttribute(& quot; transform & quot;, & quot; translate(& quot; + (1 - r[c]) * o[c] + & quot; & quot; + (1 - r[c]) * m[c] + & quot;) scale(& quot; + r[c] + & quot;)& quot;); if (document.documentElement.contains(this.element)) window.requestAnimationFrame(e.triggerAnimation.bind(e)) }; var i = document.getElementsByClassName(& quot; nc - loop_dots - 07 - 32 & quot;), n = []; if (i) for (var a = 0; i.length & gt; a; a++) !function (e) { n.push(new t(i[e])) }(a); document.addEventListener(& quot; visibilitychange & quot;, function () { & quot; hidden & quot; == document.visibilityState ? n.forEach(function (t) { t.reset() }) : n.forEach(function (t) { t.init() }) }) }();</script>
  </g>
</svg>
